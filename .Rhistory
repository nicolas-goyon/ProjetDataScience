}
library(ggplot2)
raw_data <- read.csv("output_file.csv")
# Name of the numeric column
numericColumn <- "salaire"
# Convert all columns to character except the numeric column
raw_data[, setdiff(names(raw_data), numericColumn)] <- lapply(raw_data[, setdiff(names(raw_data), numericColumn)], as.character)
raw_data$Date <- as.Date(raw_data$Date)
summary(raw_data)
boxplot(raw_data$salaire ~ raw_data$Genre)
boxplot(raw_data$salaire ~ raw_data$annee_optention_diplome)
boxplot(raw_data$salaire ~ raw_data$type_formation)
boxplot(raw_data$salaire ~ raw_data$formation)
boxplot(raw_data$salaire ~ raw_data$situation_actuelle)
boxplot(raw_data$salaire ~ raw_data$salarie_ou_non)
boxplot(raw_data$salaire ~ raw_data$nature_du_contrat)
ordered_data <- raw_data[order(as.numeric(raw_data$duree_cdd)), ]
boxplot(raw_data$salaire ~ as.numeric(raw_data$duree_cdd), data = ordered_data)
raw_data$month_group <- cut(as.numeric(raw_data$duree_cdd),
breaks = c(0, 6, 12, 24, Inf),
labels = c("1-6", "7-12", "13-24", "25+"),
right = FALSE)
boxplot(raw_data$salaire ~ raw_data$month_group, data = raw_data)
boxplot(raw_data$salaire ~ raw_data$emploi_en_france)
median_salaries <- tapply(raw_data$salaire, raw_data$emploi_etranger, median)
median_order <- names(sort(median_salaries))
raw_data$emploi_etranger <- factor(raw_data$emploi_etranger, levels = median_order)
ggplot(raw_data, aes(x = emploi_etranger, y = salaire)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
median_salaries <- tapply(raw_data$salaire, raw_data$emploi_etranger, median)
median_order <- names(sort(median_salaries))
raw_data$emploi_etranger <- factor(raw_data$emploi_etranger, levels = median_order)
ggplot(raw_data, aes(x = emploi_etranger, y = salaire)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
View(raw_data)
raw_data <- read.csv("data/harmo_filtered.csv")
raw_data <- read.csv("harmo_filtered.csv")
raw_data <- read.csv("data/harmo_filtered.csv")
raw_data <- read.csv("data/harmo_filtered_data_2023.csv")
#raw_data <- read.csv("output_file.csv")
View(raw_data)
raw_data <- read.csv("data/extraction_finale_enquete_2020DS.csv")
raw_data <- read.csv("data/extraction_finale_enquete_2020DS.csv", header = TRUE, sep =";")
raw_data <- read.csv("data/extraction_finale_enquete_2020DS.csv", header = TRUE, sep = ";")
raw_data <- read.csv("data/extraction_finale_enquete_2020DS.csv", sep = ";")
raw_data <- read.csv("data/extraction_finale_enquete_2020DS.csv", sep = ";", fileEncoding = "UTF-8")
raw_data <- read.csv("data/extraction_finale_enquete_2020DS.csv", sep = ";", fileEncoding = "UTF-8", header= TRUE)
# Trying ISO-8859-1
raw_data <- read.csv("data/extraction_finale_enquete_2020DS.csv", sep = ";", fileEncoding = "ISO-8859-1")
View(raw_data)
View(raw_data)
View(raw_data)
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
numeric_cols <- c("Anciennete", "Salaire_annuel")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
summary(raw_data)
# Trying ISO-8859-1
raw_data <- read.csv("data/extraction_finale_enquete_2020DS.csv", sep = ";", fileEncoding = "ISO-8859-1")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
numeric_cols <- c("Anciennete", "Salaire_annuel")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
summary(raw_data)
# Correspondence table
correspondence_table <- data.frame(Key =
c(
"CDI (contrat de travail à durée indéterminée) y compris de la fonction publique",
"CDIC (contrat de travail à durée indéterminée de chantier ou d'opération)",
"CDD (contrat de travail à durée déterminée) y compris de la fonction publique",
"Saisonnière",
"Interim"
),
Value = c(
"CDI",
"CDIC",
"CDD",
"Saisonnière",
"Interim"
)
)
# Function to edit values based on correspondence table
edit_column <- function(data, column_name, correspondence_table) {
data[[column_name]] <- correspondence_table$Value[match(data[[column_name]], correspondence_table$Key)]
return(data)
}
columnToChange = "nature_du_contrat"
# Apply the function to edit the 'City' column
edited_data <- edit_column(raw_data, columnToChange, correspondence_table)
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(ggplot2)
# Trying ISO-8859-1
raw_data <- read.csv("data/extraction_finale_enquete_2020DS.csv", sep = ";", fileEncoding = "ISO-8859-1")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(ggplot2)
# Trying ISO-8859-1
raw_data <- read.csv("data/extraction_finale_enquete_2020DS.csv", sep = ";", fileEncoding = "ISO-8859-1")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
summary(raw_data)
boxplot(raw_data$Salaire_annuel ~ raw_data$Genre)
boxplot(raw_data$Salaire_annuel ~ raw_data$Annee_diplome)
boxplot(raw_data$Salaire_annuel ~ raw_data$Type_formation)
boxplot(raw_data$Salaire_annuel ~ raw_data$Filiere)
boxplot(raw_data$Salaire_annuel ~ raw_data$Situation)
View(raw_data)
View(raw_data)
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
remove_rows_by_value <- function(data, column_name, value_to_remove) {
data_filtered <- subset(data, !(data[[column_name]] == value_to_remove))
return(data_filtered)
}
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Service à la personne (cours particulier de mathématiques via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Service à la personne (cours particulier de mathématique via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Service à la personne (cours particulier de mathématiques via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Service à la personne (cours particulier de mathématiques via Acadomia) ")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Service à la personne (cours particulier de mathématiques via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Service ? la personne (cours particulier de math?matiques via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Service à la personne (cours particulier de mathématiques via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
# Filtrage de certains contrat peu représentatif
filtered_data <- remove_rows_by_value(filtered_data, "Nature_contrat", "Service à la personne (cours particulier de mathématiques via Acadomia)")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
# Filtrage de certains contrat peu représentatif
filtered_data <- remove_rows_by_value(filtered_data, "Nature_contrat", "Service à la personne (cours particulier de mathématiques via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Nature_contrat", "")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
activite_data <- filtered_data
ordered_data <- raw_data[order(as.numeric(raw_data$duree_cdd)), ]
boxplot(raw_data$salaire ~ as.numeric(raw_data$duree_cdd), data = ordered_data)
monthGroup <- cut(as.numeric(raw_data$Anciennete),
breaks = c(0, 6, 12, 24, Inf),
labels = c("1-6", "7-12", "13-24", "25+"),
right = FALSE)
boxplot(raw_data$Salaire_annuel ~ monthGroup, data = raw_data)
monthGroup <- cut(as.numeric(raw_data$Anciennete),
breaks = c(0, 6, 12, 24, Inf),
labels = c("1-6", "7-12", "13-24", "25+"),
right = FALSE)
boxplot(raw_data$Salaire_annuel ~ monthGroup, data = raw_data)
ordered_data <- raw_data[order(as.numeric(raw_data$Anciennete)), ]
boxplot(raw_data$Salaire_annuel ~ as.numeric(raw_data$Anciennete), data = ordered_data)
boxplot(raw_data$Salaire_annuel ~ raw_data$France)
raw_data_filtered <- raw_data[complete.cases(raw_data$France), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "", ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & raw_data$Pays != N/A, ]
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & raw_data$Pays != "N/A", ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & raw_data$Pays != "NA", ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & raw_data$Pays != NA, ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & raw_data$Pays == NA, ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & raw_data$Pays != NULL, ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "", ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != NA, ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != " ", ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != " "& raw_data$Pays != "", ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & (raw_data$Pays != " " | raw_data$Pays != ""), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & !grepl("^\\s*$", raw_data$Pays), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(ggplot2)
# Trying ISO-8859-1
raw_data <- read.csv("data/extraction_finale_enquete_2020DS.csv", sep = ";", fileEncoding = "ISO-8859-1")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
remove_rows_by_value <- function(data, column_name, value_to_remove) {
data_filtered <- subset(data, !(data[[column_name]] == value_to_remove))
return(data_filtered)
}
boxplot(raw_data$Salaire_annuel ~ raw_data$Genre)
boxplot(raw_data$Salaire_annuel ~ raw_data$Annee_diplome)
boxplot(raw_data$Salaire_annuel ~ raw_data$Type_formation)
boxplot(raw_data$Salaire_annuel ~ raw_data$Filiere)
boxplot(raw_data$Salaire_annuel ~ raw_data$Situation)
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
activite_data <- filtered_data
# Filtrage de certains contrat peu représentatif
filtered_data <- remove_rows_by_value(activite_data, "Nature_contrat", "Service à la personne (cours particulier de mathématiques via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Nature_contrat", "")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
ordered_data <- raw_data[order(as.numeric(raw_data$Anciennete)), ]
boxplot(raw_data$Salaire_annuel ~ as.numeric(raw_data$Anciennete), data = ordered_data)
monthGroup <- cut(as.numeric(raw_data$Anciennete),
breaks = c(0, 6, 12, 24, Inf),
labels = c("1-6", "7-12", "13-24", "25+"),
right = FALSE)
boxplot(raw_data$Salaire_annuel ~ monthGroup, data = raw_data)
boxplot(raw_data$Salaire_annuel ~ raw_data$France)
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & !grepl("^\\s*$", raw_data$Pays) & !is.na(raw_data$Salaire_annuel), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
