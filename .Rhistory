# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
remove_rows_by_value <- function(data, column_name, value_to_remove) {
data_filtered <- subset(data, !(data[[column_name]] == value_to_remove))
return(data_filtered)
}
boxplot(raw_data$Salaire_annuel ~ raw_data$Genre)
boxplot(raw_data$Salaire_annuel ~ raw_data$Annee_diplome)
boxplot(raw_data$Salaire_annuel ~ raw_data$Type_formation)
boxplot(raw_data$Salaire_annuel ~ raw_data$Filiere)
boxplot(raw_data$Salaire_annuel ~ raw_data$Situation)
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
activite_data <- filtered_data
# Filtrage de certains contrat peu représentatif
filtered_data <- remove_rows_by_value(activite_data, "Nature_contrat", "Service à la personne (cours particulier de mathématiques via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Nature_contrat", "")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
ordered_data <- raw_data[order(as.numeric(raw_data$Anciennete)), ]
boxplot(raw_data$Salaire_annuel ~ as.numeric(raw_data$Anciennete), data = ordered_data)
monthGroup <- cut(as.numeric(raw_data$Anciennete),
breaks = c(0, 6, 12, 24, Inf),
labels = c("1-6", "7-12", "13-24", "25+"),
right = FALSE)
boxplot(raw_data$Salaire_annuel ~ monthGroup, data = raw_data)
boxplot(raw_data$Salaire_annuel ~ raw_data$France)
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & !grepl("^\\s*$", raw_data$Pays) & !is.na(raw_data$Salaire_annuel), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
# Trying ISO-8859-1
raw_data <- read.csv("data/data_2019.csv", sep = ",", fileEncoding = "ISO-8859-1")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
# Trying ISO-8859-1
raw_data <- read.csv("data/data_2019.csv", sep = ",", fileEncoding = "UTF-8")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(ggplot2)
# Trying ISO-8859-1
raw_data <- read.csv("data/data_2019.csv", sep = ",", fileEncoding = "UTF-8")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
remove_rows_by_value <- function(data, column_name, value_to_remove) {
data_filtered <- subset(data, !(data[[column_name]] == value_to_remove))
return(data_filtered)
}
boxplot(raw_data$Salaire_annuel ~ raw_data$Genre)
boxplot(raw_data$Salaire_annuel ~ raw_data$Annee_diplome)
boxplot(raw_data$Salaire_annuel ~ raw_data$Type_formation)
boxplot(raw_data$Salaire_annuel ~ raw_data$Filiere)
boxplot(raw_data$Salaire_annuel ~ raw_data$Situation)
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
activite_data <- filtered_data
# Filtrage de certains contrat peu représentatif
filtered_data <- remove_rows_by_value(activite_data, "Nature_contrat", "Service à la personne (cours particulier de mathématiques via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Nature_contrat", "")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
ordered_data <- raw_data[order(as.numeric(raw_data$Anciennete)), ]
boxplot(raw_data$Salaire_annuel ~ as.numeric(raw_data$Anciennete), data = ordered_data)
monthGroup <- cut(as.numeric(raw_data$Anciennete),
breaks = c(0, 6, 12, 24, Inf),
labels = c("1-6", "7-12", "13-24", "25+"),
right = FALSE)
boxplot(raw_data$Salaire_annuel ~ monthGroup, data = raw_data)
boxplot(raw_data$Salaire_annuel ~ raw_data$France)
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & !grepl("^\\s*$", raw_data$Pays) & !is.na(raw_data$Salaire_annuel), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(ggplot2)
# Trying ISO-8859-1
raw_data <- read.csv("data/data_2019.csv", sep = ",", fileEncoding = "UTF-8")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
remove_rows_by_value <- function(data, column_name, value_to_remove) {
data_filtered <- subset(data, !(data[[column_name]] == value_to_remove))
return(data_filtered)
}
boxplot(raw_data$Salaire_annuel ~ raw_data$Genre)
boxplot(raw_data$Salaire_annuel ~ raw_data$Annee_diplome)
boxplot(raw_data$Salaire_annuel ~ raw_data$Type_formation)
boxplot(raw_data$Salaire_annuel ~ raw_data$Filiere)
boxplot(raw_data$Salaire_annuel ~ raw_data$Situation)
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
activite_data <- filtered_data
# Filtrage de certains contrat peu représentatif
filtered_data <- remove_rows_by_value(activite_data, "Nature_contrat", "Service à la personne (cours particulier de mathématiques via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Nature_contrat", "")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
ordered_data <- raw_data[order(as.numeric(raw_data$Anciennete)), ]
boxplot(raw_data$Salaire_annuel ~ as.numeric(raw_data$Anciennete), data = ordered_data)
monthGroup <- cut(as.numeric(raw_data$Anciennete),
breaks = c(0, 6, 12, 24, Inf),
labels = c("1-6", "7-12", "13-24", "25+"),
right = FALSE)
boxplot(raw_data$Salaire_annuel ~ monthGroup, data = raw_data)
boxplot(raw_data$Salaire_annuel ~ raw_data$France)
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & !grepl("^\\s*$", raw_data$Pays) & !is.na(raw_data$Salaire_annuel), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(ggplot2)
# Trying ISO-8859-1
raw_data <- read.csv("data/data_2019.csv", sep = ",")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
remove_rows_by_value <- function(data, column_name, value_to_remove) {
data_filtered <- subset(data, !(data[[column_name]] == value_to_remove))
return(data_filtered)
}
boxplot(raw_data$Salaire_annuel ~ raw_data$Genre)
boxplot(raw_data$Salaire_annuel ~ raw_data$Annee_diplome)
boxplot(raw_data$Salaire_annuel ~ raw_data$Type_formation)
boxplot(raw_data$Salaire_annuel ~ raw_data$Filiere)
boxplot(raw_data$Salaire_annuel ~ raw_data$Situation)
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
activite_data <- filtered_data
# Filtrage de certains contrat peu représentatif
filtered_data <- remove_rows_by_value(activite_data, "Nature_contrat", "Service à la personne (cours particulier de mathématiques via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Nature_contrat", "")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
ordered_data <- raw_data[order(as.numeric(raw_data$Anciennete)), ]
boxplot(raw_data$Salaire_annuel ~ as.numeric(raw_data$Anciennete), data = ordered_data)
monthGroup <- cut(as.numeric(raw_data$Anciennete),
breaks = c(0, 6, 12, 24, Inf),
labels = c("1-6", "7-12", "13-24", "25+"),
right = FALSE)
boxplot(raw_data$Salaire_annuel ~ monthGroup, data = raw_data)
boxplot(raw_data$Salaire_annuel ~ raw_data$France)
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & !grepl("^\\s*$", raw_data$Pays) & !is.na(raw_data$Salaire_annuel), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(ggplot2)
# Trying ISO-8859-1
raw_data <- read.csv("data/data_2020.csv", sep = ",")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
remove_rows_by_value <- function(data, column_name, value_to_remove) {
data_filtered <- subset(data, !(data[[column_name]] == value_to_remove))
return(data_filtered)
}
boxplot(raw_data$Salaire_annuel ~ raw_data$Genre)
boxplot(raw_data$Salaire_annuel ~ raw_data$Annee_diplome)
boxplot(raw_data$Salaire_annuel ~ raw_data$Type_formation)
boxplot(raw_data$Salaire_annuel ~ raw_data$Filiere)
boxplot(raw_data$Salaire_annuel ~ raw_data$Situation)
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
activite_data <- filtered_data
# Filtrage de certains contrat peu représentatif
filtered_data <- remove_rows_by_value(activite_data, "Nature_contrat", "Service à la personne (cours particulier de mathématiques via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Nature_contrat", "")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
ordered_data <- raw_data[order(as.numeric(raw_data$Anciennete)), ]
boxplot(raw_data$Salaire_annuel ~ as.numeric(raw_data$Anciennete), data = ordered_data)
monthGroup <- cut(as.numeric(raw_data$Anciennete),
breaks = c(0, 6, 12, 24, Inf),
labels = c("1-6", "7-12", "13-24", "25+"),
right = FALSE)
boxplot(raw_data$Salaire_annuel ~ monthGroup, data = raw_data)
boxplot(raw_data$Salaire_annuel ~ raw_data$France)
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & !grepl("^\\s*$", raw_data$Pays) & !is.na(raw_data$Salaire_annuel), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
boxplot(raw_data$Salaire_annuel ~ raw_data$Annee_diplome)
# Trying ISO-8859-1
raw_data <- read.csv("data/data_2018.csv", sep = ",")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(ggplot2)
# Trying ISO-8859-1
raw_data <- read.csv("data/data_2018.csv", sep = ",")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(ggplot2)
# Trying ISO-8859-1
raw_data <- read.csv("data/data_2018.csv", sep = ",")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "Identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
summary(raw_data)
remove_rows_by_value <- function(data, column_name, value_to_remove) {
data_filtered <- subset(data, !(data[[column_name]] == value_to_remove))
return(data_filtered)
}
boxplot(raw_data$Salaire_annuel ~ raw_data$Genre)
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(ggplot2)
# Trying ISO-8859-1
raw_data <- read.csv("data/data_2018.csv", sep = ",")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "Identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
remove_rows_by_value <- function(data, column_name, value_to_remove) {
data_filtered <- subset(data, !(data[[column_name]] == value_to_remove))
return(data_filtered)
}
boxplot(raw_data$Salaire_annuel ~ raw_data$Genre)
boxplot(raw_data$Salaire_annuel ~ raw_data$Annee_diplome)
boxplot(raw_data$Salaire_annuel ~ raw_data$Type_formation)
boxplot(raw_data$Salaire_annuel ~ raw_data$Filiere)
boxplot(raw_data$Salaire_annuel ~ raw_data$Situation)
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
activite_data <- filtered_data
# Filtrage de certains contrat peu représentatif
filtered_data <- remove_rows_by_value(activite_data, "Nature_contrat", "Service à la personne (cours particulier de mathématiques via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Nature_contrat", "")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
ordered_data <- raw_data[order(as.numeric(raw_data$Anciennete)), ]
boxplot(raw_data$Salaire_annuel ~ as.numeric(raw_data$Anciennete), data = ordered_data)
monthGroup <- cut(as.numeric(raw_data$Anciennete),
breaks = c(0, 6, 12, 24, Inf),
labels = c("1-6", "7-12", "13-24", "25+"),
right = FALSE)
boxplot(raw_data$Salaire_annuel ~ monthGroup, data = raw_data)
boxplot(raw_data$Salaire_annuel ~ raw_data$France)
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & !grepl("^\\s*$", raw_data$Pays) & !is.na(raw_data$Salaire_annuel), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
boxplot(raw_data$Salaire_annuel ~ raw_data$Type_formation)
boxplot(raw_data$Salaire_annuel ~ raw_data$Filiere)
boxplot(raw_data$Salaire_annuel ~ raw_data$Situation)
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(ggplot2)
# Trying ISO-8859-1
raw_data <- read.csv("data/data_2018.csv", sep = ",")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "Identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
remove_rows_by_value <- function(data, column_name, value_to_remove) {
data_filtered <- subset(data, !(data[[column_name]] == value_to_remove))
return(data_filtered)
}
boxplot(raw_data$Salaire_annuel ~ raw_data$Genre)
boxplot(raw_data$Salaire_annuel ~ raw_data$Annee_diplome)
boxplot(raw_data$Salaire_annuel ~ raw_data$Type_formation)
boxplot(raw_data$Salaire_annuel ~ raw_data$Filiere)
boxplot(raw_data$Salaire_annuel ~ raw_data$Filiere + raw_data$Genre)
boxplot(raw_data$Salaire_annuel ~ raw_data$Situation)
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
activite_data <- filtered_data
# Filtrage de certains contrat peu représentatif
filtered_data <- remove_rows_by_value(activite_data, "Nature_contrat", "Service à la personne (cours particulier de mathématiques via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Nature_contrat", "")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
ordered_data <- raw_data[order(as.numeric(raw_data$Anciennete)), ]
boxplot(raw_data$Salaire_annuel ~ as.numeric(raw_data$Anciennete), data = ordered_data)
monthGroup <- cut(as.numeric(raw_data$Anciennete),
breaks = c(0, 6, 12, 24, Inf),
labels = c("1-6", "7-12", "13-24", "25+"),
right = FALSE)
boxplot(raw_data$Salaire_annuel ~ monthGroup, data = raw_data)
boxplot(raw_data$Salaire_annuel ~ raw_data$France)
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & !grepl("^\\s*$", raw_data$Pays) & !is.na(raw_data$Salaire_annuel), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
library(ggplot2)
# Trying ISO-8859-1
raw_data <- read.csv("data/data_2018.csv", sep = ",")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "Identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
remove_rows_by_value <- function(data, column_name, value_to_remove) {
data_filtered <- subset(data, !(data[[column_name]] == value_to_remove))
return(data_filtered)
}
boxplot(raw_data$Salaire_annuel ~ raw_data$Genre)
boxplot(raw_data$Salaire_annuel ~ raw_data$Annee_diplome)
boxplot(raw_data$Salaire_annuel ~ raw_data$Type_formation)
boxplot(raw_data$Salaire_annuel ~ raw_data$Filiere)
boxplot(raw_data$Salaire_annuel ~ raw_data$Situation)
filtered_data <- remove_rows_by_value(raw_data, "Situation", "En recherche emploi")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En poursuite d'études (hors thèse) / en formation")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "These")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Sans activité")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Volontariat")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "En création d'entreprise /reprise d'entreprise")
filtered_data <- remove_rows_by_value(filtered_data, "Situation", "Etudes")
activite_data <- filtered_data
# Filtrage de certains contrat peu représentatif
filtered_data <- remove_rows_by_value(activite_data, "Nature_contrat", "Service à la personne (cours particulier de mathématiques via Acadomia)")
filtered_data <- remove_rows_by_value(filtered_data, "Nature_contrat", "")
ggplot(filtered_data, aes(x = Nature_contrat, y = Salaire_annuel)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Contract Type", x = "Contract Type", y = "Salary")
ordered_data <- raw_data[order(as.numeric(raw_data$Anciennete)), ]
boxplot(raw_data$Salaire_annuel ~ as.numeric(raw_data$Anciennete), data = ordered_data)
monthGroup <- cut(as.numeric(raw_data$Anciennete),
breaks = c(0, 6, 12, 24, Inf),
labels = c("1-6", "7-12", "13-24", "25+"),
right = FALSE)
boxplot(raw_data$Salaire_annuel ~ monthGroup, data = raw_data)
boxplot(raw_data$Salaire_annuel ~ raw_data$France)
raw_data_filtered <- raw_data[complete.cases(raw_data$Pays) & raw_data$Pays != "" & !grepl("^\\s*$", raw_data$Pays) & !is.na(raw_data$Salaire_annuel), ]
median_salaries <- tapply(raw_data_filtered$Salaire_annuel, raw_data_filtered$Pays, median)
median_order <- names(sort(median_salaries))
emploiFactor <- factor(raw_data_filtered$Pays, levels = median_order)
ggplot(raw_data_filtered, aes(x = emploiFactor, y = Salaire_annuel)) +
geom_boxplot(na.rm = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) +
labs(title = "Salary Distribution by Country", x = "Country", y = "Salary")
# Trying ISO-8859-1
raw_data <- read.csv("data/data_2019.csv", sep = ",")
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "Identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Lists specifying which columns to convert to factors and numeric
factor_cols <- c("Date", "identifiant", "Genre", "Annee_diplome","Type_formation","Filiere","Situation","Secteur","Nature_contrat", "France","Region", "Pays", "Taille_entreprise", "Nom_entreprise", "Departement", "Intitule_poste", "Secteur_activite")
numeric_cols <- c("Anciennete", "Salaire_annuel", "Responsabilite_hierarchique", "Responsabilite_budget", "Responsabilite_equipe", "Responsabilite_projet", "Satisfaction_globale", "Saitisfaction_relations", "Satisfaction_salaire", "Satisfaction_autonomie", "Satisfaction_localisation")
# Convert columns to factors
raw_data[factor_cols] <- lapply(raw_data[factor_cols], as.factor)
# Convert columns to numeric
raw_data[numeric_cols] <- lapply(raw_data[numeric_cols], as.numeric)
summary(raw_data)
remove_rows_by_value <- function(data, column_name, value_to_remove) {
data_filtered <- subset(data, !(data[[column_name]] == value_to_remove))
return(data_filtered)
}
boxplot(raw_data$Salaire_annuel ~ raw_data$Genre)
boxplot(raw_data$Salaire_annuel ~ raw_data$Annee_diplome)
boxplot(raw_data$Salaire_annuel ~ raw_data$Type_formation)
# Trying ISO-8859-1
raw_data <- read.csv("data/data_2019.csv", sep = ",", fileEncoding = "UTF-8")
